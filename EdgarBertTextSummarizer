{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of EdgarBertTextSummarizer","provenance":[{"file_id":"1z8KuDNr8EpvnXdFfIhRhQCMAeWUe13na","timestamp":1590827272681}],"collapsed_sections":[],"toc_visible":true,"authorship_tag":"ABX9TyPOXxkcGErDH8EtfTlXidhe"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"fisiYeGjIFfP","colab_type":"text"},"source":["# Load libs\n"]},{"cell_type":"code","metadata":{"id":"u4aLDCapTFB8","colab_type":"code","colab":{}},"source":["%%capture\n","!pip install bert-extractive-summarizer\n","!pip install spacy\n","!pip install transformers==2.2.2\n","!pip install neuralcoref"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"WWkipfTDhorc","colab_type":"text"},"source":["# Sentence Handler"]},{"cell_type":"code","metadata":{"id":"6sSygHEDVVSt","colab_type":"code","colab":{}},"source":["# Sentence Handler\n","\n","from spacy.lang.en import English\n","from typing import List\n","\n","\n","class SentenceHandler(object):\n","\n","    def __init__(self, language=English):\n","        self.nlp = language()\n","        self.nlp.add_pipe(self.nlp.create_pipe('sentencizer'))\n","\n","    def process(self, body: str, min_length: int = 40, max_length: int = 600) -> List[str]:\n","        \"\"\"\n","        Processes the content sentences.\n","        :param body: The raw string body to process\n","        :param min_length: Minimum length that the sentences must be\n","        :param max_length: Max length that the sentences mus fall under\n","        :return: Returns a list of sentences.\n","        \"\"\"\n","        doc = self.nlp(body)\n","        return [c.string.strip() for c in doc.sents if max_length > len(c.string.strip()) > min_length]\n","\n","    def __call__(self, body: str, min_length: int = 40, max_length: int = 600) -> List[str]:\n","        return self.process(body, min_length, max_length)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"tqVPqFV7hlsb","colab_type":"text"},"source":["# Bert Model init"]},{"cell_type":"code","metadata":{"id":"CR0nXGY8V2RQ","colab_type":"code","colab":{}},"source":["from transformers import *\n","import logging\n","import torch\n","import numpy as np\n","from numpy import ndarray\n","from typing import List\n","\n","\n","class BertModelCustom(object):\n","\n","    \"\"\"\n","    Base handler for BERT models.\n","    \"\"\"\n","\n","    MODELS = {\n","        'bert-base-uncased': (BertModel, BertTokenizer),\n","        'bert-large-uncased': (BertModel, BertTokenizer),\n","        'xlnet-base-cased': (XLNetModel, XLNetTokenizer),\n","        'xlm-mlm-enfr-1024': (XLMModel, XLMTokenizer),\n","        'distilbert-base-uncased': (DistilBertModel, DistilBertTokenizer),\n","        'albert-base-v1': (AlbertModel, AlbertTokenizer),\n","        'albert-large-v1': (AlbertModel, AlbertTokenizer)\n","    }\n","\n","    def __init__(\n","        self,\n","        model: str,\n","        custom_model: PreTrainedModel=None,\n","        custom_tokenizer: PreTrainedTokenizer=None\n","    ):\n","        \"\"\"\n","        :param model: Model is the string path for the bert weights. If given a keyword, the s3 path will be used\n","        :param custom_model: This is optional if a custom bert model is used\n","        :param custom_tokenizer: Place to use custom tokenizer\n","        \"\"\"\n","        base_model, base_tokenizer = self.MODELS[model]\n","\n","        self.device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","\n","        self.model = base_model.from_pretrained(model, output_hidden_states=True).to(self.device)\n","\n","        self.tokenizer = base_tokenizer.from_pretrained(model)\n","\n","        self.model.eval()\n","\n","    def tokenize_input(self, text: str) -> torch.tensor:\n","        \"\"\"\n","        Tokenizes the text input.\n","        :param text: Text to tokenize\n","        :return: Returns a torch tensor\n","        \"\"\"\n","        tokenized_text = self.tokenizer.tokenize(text)\n","        indexed_tokens = self.tokenizer.convert_tokens_to_ids(tokenized_text)\n","        return torch.tensor([indexed_tokens]).to(self.device)\n","\n","    def extract_embeddings(\n","        self,\n","        text: str,\n","        hidden: int=-2,\n","        reduce_option: str ='mean'\n","    ) -> torch.Tensor:\n","\n","        \"\"\"\n","        Extracts the embeddings for the given text\n","        :param text: The text to extract embeddings for.\n","        :param hidden: The hidden layer to use for a readout handler\n","        :param squeeze: If we should squeeze the outputs (required for some layers)\n","        :param reduce_option: How we should reduce the items.\n","        :return: A numpy array.\n","        \"\"\"\n","\n","        tokens_tensor = self.tokenize_input(text)\n","        pooled, hidden_states = self.model(tokens_tensor)[-2:]\n","\n","        if -1 > hidden > -12:\n","\n","            if reduce_option == 'max':\n","                pooled = hidden_states[hidden].max(dim=1)[0]\n","\n","            elif reduce_option == 'median':\n","                pooled = hidden_states[hidden].median(dim=1)[0]\n","\n","            else:\n","                pooled = hidden_states[hidden].mean(dim=1)\n","\n","        return pooled\n","\n","    def create_matrix(\n","        self,\n","        content: List[str],\n","        hidden: int=-2,\n","        reduce_option: str = 'mean'\n","    ) -> ndarray:\n","        \"\"\"\n","        Create matrix from the embeddings\n","        :param content: The list of sentences\n","        :param hidden: Which hidden layer to use\n","        :param reduce_option: The reduce option to run.\n","        :return: A numpy array matrix of the given content.\n","        \"\"\"\n","\n","        return np.asarray([\n","            np.squeeze(self.extract_embeddings(t, hidden=hidden, reduce_option=reduce_option).data.cpu().numpy())\n","            for t in content\n","        ])\n","\n","    def __call__(\n","        self,\n","        content: List[str],\n","        hidden: int= -2,\n","        reduce_option: str = 'mean'\n","    ) -> ndarray:\n","        return self.create_matrix(content, hidden, reduce_option)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"l85KRZGGhEmt","colab_type":"text"},"source":["# Clustering Algorithm"]},{"cell_type":"code","metadata":{"id":"LxiwTUGfcTdP","colab_type":"code","colab":{}},"source":["# Cluster Features\n","import numpy as np\n","from numpy import ndarray\n","from sklearn.cluster import KMeans\n","from sklearn.mixture import GaussianMixture\n","from sklearn.decomposition import PCA\n","from typing import List\n","\n","\n","class ClusterFeatures(object):\n","    \"\"\"\n","    Basic handling of clustering features.\n","    \"\"\"\n","\n","    def __init__(\n","        self,\n","        features: ndarray,\n","        algorithm: str = 'kmeans',\n","        pca_k: int = None,\n","        random_state: int = 12345\n","    ):\n","        \"\"\"\n","        :param features: the embedding matrix created by bert parent\n","        :param algorithm: Which clustering algorithm to use\n","        :param pca_k: If you want the features to be ran through pca, this is the components number\n","        :param random_state: Random state\n","        \"\"\"\n","        self.features = features\n","\n","        self.algorithm = algorithm\n","        self.random_state = random_state\n","        np.random.seed(random_state)\n","\n","    def __get_model(self, k: int):\n","        \"\"\"\n","        Retrieve clustering model\n","        :param k: amount of clusters\n","        :return: Clustering model\n","        \"\"\"\n","\n","        if self.algorithm == 'gmm':\n","            return GaussianMixture(n_components=k, random_state=self.random_state)\n","\n","        return KMeans(n_clusters=k, random_state=self.random_state)\n","\n","    def __get_centroids(self, model):\n","        \"\"\"\n","        Retrieve centroids of model\n","        :param model: Clustering model\n","        :return: Centroids\n","        \"\"\"\n","\n","        if self.algorithm == 'gmm':\n","            return model.means_\n","        return model.cluster_centers_\n","\n","    def __find_closest_args(self, centroids: np.ndarray):\n","        \"\"\"\n","        Find the closest arguments to centroid\n","        :param centroids: Centroids to find closest\n","        :return: Closest arguments\n","        \"\"\"\n","\n","        centroid_min = 1e10\n","        cur_arg = -1\n","        args = {}\n","        used_idx = []\n","\n","        for j, centroid in enumerate(centroids):\n","\n","            for i, feature in enumerate(self.features):\n","                value = np.linalg.norm(feature - centroid)\n","\n","                if value < centroid_min and i not in used_idx:\n","                    cur_arg = i\n","                    centroid_min = value\n","\n","            used_idx.append(cur_arg)\n","            args[j] = cur_arg\n","            centroid_min = 1e10\n","            cur_arg = -1\n","\n","        return args\n","\n","    def cluster(self, ratio: float = 0.1) -> List[int]:\n","        \"\"\"\n","        Clusters sentences based on the ratio\n","        :param ratio: Ratio to use for clustering\n","        :return: Sentences index that qualify for summary\n","        \"\"\"\n","\n","        k = 1 if ratio * len(self.features) < 1 else int(len(self.features) * ratio)\n","        model = self.__get_model(k).fit(self.features)\n","        centroids = self.__get_centroids(model)\n","        cluster_args = self.__find_closest_args(centroids)\n","        sorted_values = sorted(cluster_args.values())\n","        return sorted_values\n","\n","    def __call__(self, ratio: float = 0.1) -> List[int]:\n","        return self.cluster(ratio)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"HmIfNz2EhLVe","colab_type":"text"},"source":["# Variables"]},{"cell_type":"code","metadata":{"id":"mCnW--d9Tx_y","colab_type":"code","colab":{}},"source":["model='bert-large-uncased'\n","hidden=-2\n","reduce_option = 'mean'\n","sentence_handler = SentenceHandler()\n","random_state = 12345"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"3nioVSG2VOwB","colab_type":"code","colab":{}},"source":["# Summarizer variables\n","np.random.seed(random_state)\n","nlp_model = BertModelCustom(model, None, None)\n","nlp_hidden = hidden\n","nlp_reduce_option = reduce_option\n","nlp_sentence_handler = sentence_handler\n","nlp_random_state = random_state\n","\n","# Single Model Variables\n","body = '''\n","The Chrysler Building, the famous art deco New York skyscraper, will be sold for a small fraction of its previous sales price.\n","The deal, first reported by The Real Deal, was for $150 million, according to a source familiar with the deal.\n","Mubadala, an Abu Dhabi investment fund, purchased 90% of the building for $800 million in 2008.\n","Real estate firm Tishman Speyer had owned the other 10%.\n","The buyer is RFR Holding, a New York real estate company.\n","Officials with Tishman and RFR did not immediately respond to a request for comments.\n","It's unclear when the deal will close.\n","The building sold fairly quickly after being publicly placed on the market only two months ago.\n","The sale was handled by CBRE Group.\n","The incentive to sell the building at such a huge loss was due to the soaring rent the owners pay to Cooper Union, a New York college, for the land under the building.\n","The rent is rising from $7.75 million last year to $32.5 million this year to $41 million in 2028.\n","Meantime, rents in the building itself are not rising nearly that fast.\n","While the building is an iconic landmark in the New York skyline, it is competing against newer office towers with large floor-to-ceiling windows and all the modern amenities.\n","Still the building is among the best known in the city, even to people who have never been to New York.\n","It is famous for its triangle-shaped, vaulted windows worked into the stylized crown, along with its distinctive eagle gargoyles near the top.\n","It has been featured prominently in many films, including Men in Black 3, Spider-Man, Armageddon, Two Weeks Notice and Independence Day.\n","The previous sale took place just before the 2008 financial meltdown led to a plunge in real estate prices.\n","Still there have been a number of high profile skyscrapers purchased for top dollar in recent years, including the Waldorf Astoria hotel, which Chinese firm Anbang Insurance purchased in 2016 for nearly $2 billion, and the Willis Tower in Chicago, which was formerly known as Sears Tower, once the world's tallest.\n","Blackstone Group (BX) bought it for $1.3 billion 2015.\n","The Chrysler Building was the headquarters of the American automaker until 1953, but it was named for and owned by Chrysler chief Walter Chrysler, not the company itself.\n","Walter Chrysler had set out to build the tallest building in the world, a competition at that time with another Manhattan skyscraper under construction at 40 Wall Street at the south end of Manhattan. He kept secret the plans for the spire that would grace the top of the building, building it inside the structure and out of view of the public until 40 Wall Street was complete.\n","Once the competitor could rise no higher, the spire of the Chrysler building was raised into view, giving it the title.\n","'''\n","ratio = 0.3\n","min_length = 40\n","max_length = 600\n","use_first = True\n","algorithm = 'kmeans'"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"TuTKc9wQhO0L","colab_type":"text"},"source":["# Actual summarization"]},{"cell_type":"code","metadata":{"id":"-0ZN-ndbbspi","colab_type":"code","outputId":"f86e4e62-802b-4578-db8b-5ae7dac90928","executionInfo":{"status":"ok","timestamp":1587737460137,"user_tz":-330,"elapsed":30728,"user":{"displayName":"Edgar Monis","photoUrl":"","userId":"18244376460613966063"}},"colab":{"base_uri":"https://localhost:8080/","height":227}},"source":["def print_summary(body):\n","    sentences = nlp_sentence_handler(body, min_length, max_length)\n","    \n","    hidden_features = nlp_model(sentences, nlp_hidden, nlp_reduce_option)\n","\n","    hidden_args = ClusterFeatures(hidden_features, algorithm, random_state=nlp_random_state).cluster(ratio)\n","\n","    if use_first:\n","        if hidden_args[0] != 0:\n","            hidden_args.insert(0,0)\n","\n","    result = [sentences[j] for j in hidden_args]\n","\n","    result = ''.join(result).replace('.','.\\n')\n","\n","    print(result)\n","\n","print_summary(body)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["The Chrysler Building, the famous art deco New York skyscraper, will be sold for a small fraction of its previous sales price.\n","Real estate firm Tishman Speyer had owned the other 10%.\n","The buyer is RFR Holding, a New York real estate company.\n","The building sold fairly quickly after being publicly placed on the market only two months ago.\n","The incentive to sell the building at such a huge loss was due to the soaring rent the owners pay to Cooper Union, a New York college, for the land under the building.\n","The rent is rising from $7.\n","75 million last year to $32.\n","5 million this year to $41 million in 2028.\n","The previous sale took place just before the 2008 financial meltdown led to a plunge in real estate prices.\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"qCPslui_c_yR","colab_type":"code","outputId":"ba35857a-3331-4af5-b32d-0a2fba8f9fbf","executionInfo":{"status":"ok","timestamp":1587737464047,"user_tz":-330,"elapsed":34628,"user":{"displayName":"Edgar Monis","photoUrl":"","userId":"18244376460613966063"}},"colab":{"base_uri":"https://localhost:8080/","height":451}},"source":["game_of_thrones = '''\n","A Game of Thrones takes place over the course of one year on or near the fictional continent of Westeros. The story begins when King Robert visits the northern castle Winterfell to ask Ned Stark to be his right-hand assistant, or Hand of the King. The previous Hand, Jon Arryn, died under suspicious circumstances. Robert comes with his queen, Cersei Lannister, and his retinue, which includes a number of Lannisters. Just after the royal party arrives, Ned’s wife, Catelyn, receives a message claiming that the Lannister family was responsible for the death of the former Hand. She tells Ned, who accepts the position as Hand in order to protect Robert from the Lannisters. Ned’s son Bran then discovers Cersei Lannister and her brother Jaime Lannister having sex, and Jaime pushes Bran from a window to silence him. Everyone thinks Bran simply fell while climbing around the castle. While Bran is still unconscious, Ned leaves Winterfell and rides south with Robert. The same day, Ned’s bastard son, Jon, leaves to serve at the Wall, a massive structure that protects Westeros from the wilderness of the far North. The group of men sworn to defend the Wall, the Night’s Watch, have been receiving reports of strange creatures and have been losing men with increasing frequency. Tyrion Lannister, a little person who is brother to Cersei and Jaime, travels with Jon to the Wall to see the massive structure. Meanwhile, on a continent east of Westeros, Daenerys Targaryen marries the warlord Khal Drogo, one of the leaders of the Dothraki people. Daenerys and her brother Viserys are the last surviving members of the family Robert defeated to become king, the Targaryens. They are an old family said to be descended from dragons, and Viserys thinks with Khal Drogo’s army he can retake the throne. A knight named Ser Jorah Mormont, exiled by Ned Stark, pledges he will help. Daenerys receives three dragon eggs as a wedding gift and becomes immediately fascinated by them.\n","On the trip south to the capital, called King’s Landing, Robert’s and Cersei’s son, Joffrey, and Ned’s daughter Sansa, who everyone presumes will be married one day, go for a walk. When Joffrey sees Arya, Ned’s other daughter and sister to Sansa, practicing her swordfighting with a boy, he decides to show them he’s a better fighter. As pets, all of the Stark children have direwolf pups, a wolf breed larger than normal wolves that also happens to be the symbol of the Stark house, and Arya’s wolf injures Joffrey defending her. Though Sansa knows Joffrey instigated the fight, she will not tell on Joffrey because she’s in love with him. As punishment, Cersei wants Arya’s wolf killed, but since it ran away after hurting Joffrey, Cersei demands that Ned kill Sansa’s wolf instead. Meanwhile, an assassin tries to kill the unconscious Bran and fails. Ned finally reaches King’s Landing to find that Catelyn has sailed to the city in secret to discover the truth about the assassin. She has the dagger the assassin used, and after examining it, Catelyn’s childhood friend Littlefinger recognizes it as belonging to Tyrion Lannister. Ned tells Catelyn he will try to determine who killed the former Hand, Jon Arryn, and tried to kill Bran. Bran finally wakes from his coma, but he doesn’t remember how he fell. Tyrion visits him on his way south from the Wall to deliver a greeting from Jon. Tyrion continues south as Catelyn starts back north, and when their paths cross Catelyn has him seized for trying to kill Bran.\n","In King’s Landing, Ned slowly begins to unravel the mystery of why the previous Hand was killed. He knows it has to do with something the Hand learned about King Robert’s children. Through a spy, Robert learns that Daenerys Targaryen is pregnant. He wants to assassinate her because he fears she and her son will one day challenge Robert’s right to the throne. Disgusted with Robert’s plan, Ned resigns as Hand. That night, Jaime and his men confront Ned about Tyrion’s capture. Jaime kills Ned’s men and Ned breaks his leg while fighting. The following day, Robert reinstates Ned as hand. While Robert is gone hunting, Ned orders the execution of a rogue knight loyal to the Lannister family who has been pillaging villages. Further north, Catelyn takes Tyrion to her sister Lysa Arryn’s castle, the Eyrie, which is in a mountainous area called The Vale. Lysa accuses Tyrion of arranging the murder of both Jon Arryn and Bran. Tyrion denies the accusations and demands a trial by combat. A knight fights on Lysa’s behalf, and a mercenary fights on Tyrion’s behalf. Tyrion’s mercenary wins. While Tyrion rides from the Eyrie, a group of mountain clansmen try to kill him, but he promises to help them take The Vale and convinces them to join him.\n","In the east, as Khal Drogo and his Dothraki followers head back to Vaes Dothrak, their capital, Viserys becomes increasingly angry that Drogo has not provided him with an army with which to wage war on Westeros. During a feast he attacks Daenerys in a rage, and Khal Drogo has Viserys killed by dumping molten gold on his head. In King’s Landing, Ned has figured out why the Hand was killed: he had discovered that Joffrey was not really Robert’s child but was actually the product of Cersei’s sexual relationship with her brother, Jaime. Robert doesn’t know the truth. Robert is mortally wounded in a hunt, and before he dies, he names Ned the Protector of the Realm, essentially an interim king, until Joffrey comes of age. Ned does not tell Robert that he knows Joffrey is not the true heir, since he is the son of Cersei and Jaime. Ned asks Littlefinger’s help to install the true heir, Robert’s brother Stannis, as the king, and Littlefinger agrees. But when Ned confronts the Lannisters, saying that Joffrey is not the true heir and expecting Littlefinger’s support, Littlefinger betrays him, and Cersei imprisons Ned for treason. Meanwhile, north of the Wall, Jon and other men have discovered two strange dead bodies. They bring the bodies back for examination, and late at night, one of the bodies comes to life and tries to kill Jon’s commander. Jon and his direwolf fight off the undead body, and Jon kills the creature with fire.\n","After Ned’s capture, Arya escapes the castle in King’s Landing and Cersei holds Sansa hostage (she says she is holding Sansa for her own protection). Tywin Lannister, father to Tyrion, Cersei, and Jaime, wages war with Catelyn and her son, Robb Stark. Shrewdly outmaneuvering Tywin, Robb manages to defeat a portion of the Lannister army and capture Jaime. In King’s Landing, Joffrey, who is considered Robert’s heir, is crowned King. In the hopes that he can prevent his daughters being harmed, Ned confesses publicly to treason, and Joffrey has him executed while Sansa watches. Arya is in the crowd, though nobody knows it. Learning of his father’s death and his brother’s march to war, Jon tries to desert the Wall. But Jon’s friends convince him that he must stay and defend the Wall as he vowed. In the east, Drogo suffers a wound while raiding a village. Daenerys has one of the village women treat him, but he becomes very sick. When he is about to die, Daenerys asks the woman to heal him, but she says only bloodmagic will save him and it will require a death in exchange for his life. Despite the protests of the Dothraki people, Daenerys has the woman do it. Shortly thereafter Daenerys goes into labor. When she wakes many days later, her child is dead and Drogo is alive but brain dead. His followers have all left, leaving behind only a few warriors, the sick and old, and Ser Jorah Mormont, who has become one of Daenerys’s most trusted advisors. Daenerys sets a funeral pyre to burn Drogo and the woman, who tricked her and essentially killed her husband and child. Daenerys also places the three dragon eggs into the pyre. As the fire burns, Daenerys walks into it, and when finally it clears, Mormont and the Dothrakis find her with three newborn dragons at her breast.\n","'''\n","print_summary(game_of_thrones)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["A Game of Thrones takes place over the course of one year on or near the fictional continent of Westeros.\n","The story begins when King Robert visits the northern castle Winterfell to ask Ned Stark to be his right-hand assistant, or Hand of the King.\n","The previous Hand, Jon Arryn, died under suspicious circumstances.\n","Everyone thinks Bran simply fell while climbing around the castle.\n","Tyrion Lannister, a little person who is brother to Cersei and Jaime, travels with Jon to the Wall to see the massive structure.\n","Daenerys and her brother Viserys are the last surviving members of the family Robert defeated to become king, the Targaryens.\n","A knight named Ser Jorah Mormont, exiled by Ned Stark, pledges he will help.\n","On the trip south to the capital, called King’s Landing, Robert’s and Cersei’s son, Joffrey, and Ned’s daughter Sansa, who everyone presumes will be married one day, go for a walk.\n","Bran finally wakes from his coma, but he doesn’t remember how he fell.\n","He knows it has to do with something the Hand learned about King Robert’s children.\n","Through a spy, Robert learns that Daenerys Targaryen is pregnant.\n","Tyrion denies the accusations and demands a trial by combat.\n","But when Ned confronts the Lannisters, saying that Joffrey is not the true heir and expecting Littlefinger’s support, Littlefinger betrays him, and Cersei imprisons Ned for treason.\n","Meanwhile, north of the Wall, Jon and other men have discovered two strange dead bodies.\n","Tywin Lannister, father to Tyrion, Cersei, and Jaime, wages war with Catelyn and her son, Robb Stark.\n","Shrewdly outmaneuvering Tywin, Robb manages to defeat a portion of the Lannister army and capture Jaime.\n","In the hopes that he can prevent his daughters being harmed, Ned confesses publicly to treason, and Joffrey has him executed while Sansa watches.\n","In the east, Drogo suffers a wound while raiding a village.\n","Shortly thereafter Daenerys goes into labor.\n","When she wakes many days later, her child is dead and Drogo is alive but brain dead.\n","As the fire burns, Daenerys walks into it, and when finally it clears, Mormont and the Dothrakis find her with three newborn dragons at her breast.\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"yFMHKpQrLnLp","colab_type":"text"},"source":["# Analyzing input to the model"]},{"cell_type":"code","metadata":{"id":"XzpEYo0LLwaU","colab_type":"code","outputId":"eb2859e8-f992-435a-d7d9-276685d043dd","executionInfo":{"status":"ok","timestamp":1587737472587,"user_tz":-330,"elapsed":43157,"user":{"displayName":"Edgar Monis","photoUrl":"","userId":"18244376460613966063"}},"colab":{"base_uri":"https://localhost:8080/","height":142}},"source":["sentences = nlp_sentence_handler(body, min_length, max_length)\n","print(sentences)\n","\n","nlp_tokenizer = BertTokenizer.from_pretrained('bert-large-uncased')\n","tokenized_text = nlp_tokenizer.tokenize(sentences[0])\n","print(tokenized_text[:10])\n","indexed_tokens = nlp_tokenizer.convert_tokens_to_ids(tokenized_text)\n","print(indexed_tokens[:10])\n","\n","\n","single_sent_tensor = torch.tensor([indexed_tokens]).to('cuda:0')\n","print(single_sent_tensor[0][:10])\n","\n","\n","nlp_model = BertModel.from_pretrained('bert-large-uncased', output_hidden_states=True).to('cuda:0')\n","nlp_model.eval()\n","pooled, hidden_states = nlp_model(single_sent_tensor)[-2:]"],"execution_count":0,"outputs":[{"output_type":"stream","text":["['The Chrysler Building, the famous art deco New York skyscraper, will be sold for a small fraction of its previous sales price.', 'The deal, first reported by The Real Deal, was for $150 million, according to a source familiar with the deal.', 'Mubadala, an Abu Dhabi investment fund, purchased 90% of the building for $800 million in 2008.', 'Real estate firm Tishman Speyer had owned the other 10%.', 'The buyer is RFR Holding, a New York real estate company.', 'Officials with Tishman and RFR did not immediately respond to a request for comments.', 'The building sold fairly quickly after being publicly placed on the market only two months ago.', 'The incentive to sell the building at such a huge loss was due to the soaring rent the owners pay to Cooper Union, a New York college, for the land under the building.', 'The rent is rising from $7.75 million last year to $32.5 million this year to $41 million in 2028.', 'Meantime, rents in the building itself are not rising nearly that fast.', 'While the building is an iconic landmark in the New York skyline, it is competing against newer office towers with large floor-to-ceiling windows and all the modern amenities.', 'Still the building is among the best known in the city, even to people who have never been to New York.', 'It is famous for its triangle-shaped, vaulted windows worked into the stylized crown, along with its distinctive eagle gargoyles near the top.', 'It has been featured prominently in many films, including Men in Black 3, Spider-Man, Armageddon, Two Weeks Notice and Independence Day.', 'The previous sale took place just before the 2008 financial meltdown led to a plunge in real estate prices.', \"Still there have been a number of high profile skyscrapers purchased for top dollar in recent years, including the Waldorf Astoria hotel, which Chinese firm Anbang Insurance purchased in 2016 for nearly $2 billion, and the Willis Tower in Chicago, which was formerly known as Sears Tower, once the world's tallest.\", 'Blackstone Group (BX) bought it for $1.3 billion 2015.', 'The Chrysler Building was the headquarters of the American automaker until 1953, but it was named for and owned by Chrysler chief Walter Chrysler, not the company itself.', 'Walter Chrysler had set out to build the tallest building in the world, a competition at that time with another Manhattan skyscraper under construction at 40 Wall Street at the south end of Manhattan.', 'He kept secret the plans for the spire that would grace the top of the building, building it inside the structure and out of view of the public until 40 Wall Street was complete.', 'Once the competitor could rise no higher, the spire of the Chrysler building was raised into view, giving it the title.']\n","['the', 'chrysler', 'building', ',', 'the', 'famous', 'art', 'deco', 'new', 'york']\n","[1996, 17714, 2311, 1010, 1996, 3297, 2396, 21933, 2047, 2259]\n","tensor([ 1996, 17714,  2311,  1010,  1996,  3297,  2396, 21933,  2047,  2259],\n","       device='cuda:0')\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"-wGmm9QGWd7f","colab_type":"text"},"source":["# Vectorizing the text"]},{"cell_type":"code","metadata":{"id":"tVHEp6IdQfHt","colab_type":"code","colab":{}},"source":["tokenised_text_list = [ nlp_tokenizer.tokenize(t)              for t in sentences ]\n","indexed_tokens_list = [ nlp_tokenizer.convert_tokens_to_ids(t) for t in tokenised_text_list ]\n","\n","sentence_embeddings = []\n","\n","\n","for x in indexed_tokens_list:\n","    sent_tensor = torch.tensor([x]).to('cuda:0')\n","    pooled, hidden_states = nlp_model(sent_tensor)[-2:]\n","    pooled = hidden_states[hidden].mean(dim=1)\n","    sentence_embeddings.append(pooled)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Ec2nVVFNWhG4","colab_type":"text"},"source":["# Evaluating the model on embeddings we have obtained"]},{"cell_type":"code","metadata":{"id":"7H_oXtC7SpOz","colab_type":"code","outputId":"7a43085b-5b76-4622-96b0-362049d3793e","executionInfo":{"status":"ok","timestamp":1587737473494,"user_tz":-330,"elapsed":44049,"user":{"displayName":"Edgar Monis","photoUrl":"","userId":"18244376460613966063"}},"colab":{"base_uri":"https://localhost:8080/","height":227}},"source":["hidden_features = np.array([np.squeeze(x.detach().cpu().numpy()) for x in sentence_embeddings])\n","\n","hidden_args = ClusterFeatures(hidden_features, algorithm, random_state=nlp_random_state).cluster(ratio)\n","\n","if use_first:\n","    if hidden_args[0] != 0:\n","        hidden_args.insert(0,0)\n","\n","result = [sentences[j] for j in hidden_args]\n","\n","result = ''.join(result).replace('.','.\\n')\n","\n","print(result)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["The Chrysler Building, the famous art deco New York skyscraper, will be sold for a small fraction of its previous sales price.\n","Real estate firm Tishman Speyer had owned the other 10%.\n","The buyer is RFR Holding, a New York real estate company.\n","The building sold fairly quickly after being publicly placed on the market only two months ago.\n","The incentive to sell the building at such a huge loss was due to the soaring rent the owners pay to Cooper Union, a New York college, for the land under the building.\n","The rent is rising from $7.\n","75 million last year to $32.\n","5 million this year to $41 million in 2028.\n","The previous sale took place just before the 2008 financial meltdown led to a plunge in real estate prices.\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"mwIKijCVWmRv","colab_type":"text"},"source":["# Function that performs clustering from start to finish"]},{"cell_type":"code","metadata":{"id":"9_Vr_FOnWq0K","colab_type":"code","outputId":"d2369daf-661a-4178-d811-2590a195b65b","executionInfo":{"status":"ok","timestamp":1587737486578,"user_tz":-330,"elapsed":57123,"user":{"displayName":"Edgar Monis","photoUrl":"","userId":"18244376460613966063"}},"colab":{"base_uri":"https://localhost:8080/","height":451}},"source":["def cluster(body):\n","    # Sentences are cleaned up by the sentence handler\n","    sentences = nlp_sentence_handler(body, min_length, max_length)\n","    \n","    # The Sentences are tokenised\n","    nlp_tokenizer = BertTokenizer.from_pretrained('bert-large-uncased')\n","    tokenised_text_list = [ nlp_tokenizer.tokenize(t)              for t in sentences ]\n","    \n","    # Indexes of tokens are obtained\n","    indexed_tokens_list = [ nlp_tokenizer.convert_tokens_to_ids(t) for t in tokenised_text_list ]\n","\n","    # Init the nlp model\n","    nlp_model = BertModel.from_pretrained('bert-large-uncased', output_hidden_states=True).to('cuda:0')\n","    nlp_model.eval()\n","\n","    # The sentences are passes through the model one at a time because of variable length\n","    sentence_embeddings = []\n","\n","    for x in indexed_tokens_list:\n","        sent_tensor = torch.tensor([x]).to('cuda:0')\n","        pooled, hidden_states = nlp_model(sent_tensor)[-2:]\n","        pooled = hidden_states[hidden].mean(dim=1)\n","        sentence_embeddings.append(pooled)\n","\n","    hidden_features = np.array([np.squeeze(x.detach().cpu().numpy()) for x in sentence_embeddings])\n","\n","    hidden_args = ClusterFeatures(hidden_features, algorithm, random_state=nlp_random_state).cluster(ratio)\n","\n","    if hidden_args[0] != 0:\n","        hidden_args.insert(0,0)\n","\n","    result = [sentences[j] for j in hidden_args]\n","\n","    result = ''.join(result).replace('.','.\\n')\n","\n","    print(result)\n","\n","cluster(game_of_thrones)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["A Game of Thrones takes place over the course of one year on or near the fictional continent of Westeros.\n","The story begins when King Robert visits the northern castle Winterfell to ask Ned Stark to be his right-hand assistant, or Hand of the King.\n","The previous Hand, Jon Arryn, died under suspicious circumstances.\n","Everyone thinks Bran simply fell while climbing around the castle.\n","Tyrion Lannister, a little person who is brother to Cersei and Jaime, travels with Jon to the Wall to see the massive structure.\n","Daenerys and her brother Viserys are the last surviving members of the family Robert defeated to become king, the Targaryens.\n","A knight named Ser Jorah Mormont, exiled by Ned Stark, pledges he will help.\n","On the trip south to the capital, called King’s Landing, Robert’s and Cersei’s son, Joffrey, and Ned’s daughter Sansa, who everyone presumes will be married one day, go for a walk.\n","Bran finally wakes from his coma, but he doesn’t remember how he fell.\n","He knows it has to do with something the Hand learned about King Robert’s children.\n","Through a spy, Robert learns that Daenerys Targaryen is pregnant.\n","Tyrion denies the accusations and demands a trial by combat.\n","But when Ned confronts the Lannisters, saying that Joffrey is not the true heir and expecting Littlefinger’s support, Littlefinger betrays him, and Cersei imprisons Ned for treason.\n","Meanwhile, north of the Wall, Jon and other men have discovered two strange dead bodies.\n","Tywin Lannister, father to Tyrion, Cersei, and Jaime, wages war with Catelyn and her son, Robb Stark.\n","Shrewdly outmaneuvering Tywin, Robb manages to defeat a portion of the Lannister army and capture Jaime.\n","In the hopes that he can prevent his daughters being harmed, Ned confesses publicly to treason, and Joffrey has him executed while Sansa watches.\n","In the east, Drogo suffers a wound while raiding a village.\n","Shortly thereafter Daenerys goes into labor.\n","When she wakes many days later, her child is dead and Drogo is alive but brain dead.\n","As the fire burns, Daenerys walks into it, and when finally it clears, Mormont and the Dothrakis find her with three newborn dragons at her breast.\n","\n"],"name":"stdout"}]}]}